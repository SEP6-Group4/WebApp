@using WebApp.Pages
@using WebApp.Models.Authentication
@inject IModalService Modal
@inject AuthenticationStateProvider AuthenticationStateProvider
@inject NavigationManager NavigationManager


    <div class="collapseNav">
        <div class="top-row navbar navbar-dark">
            <div class="container-fluid">
                <button title="Navigation menu" class="navbar-toggler" @onclick="ToggleNavMenu">
                    <span class="navbar-toggler-icon"></span>
                </button>
            </div>
        </div>
    </div>

    <div class="@NavMenuCssClass" @onclick="ToggleNavMenu">
        <nav class="navbar navbar-expand-sm">

            <div class="nav-item px-3">
                <a class="nav-link" href="Movies">
                    <i class="bi bi-film"></i> Movies
                </a>
            </div>

            <div class="nav-item px-3">
                <a class="nav-link" href="Actors">
                    <i class="bi bi-person-video2"></i> Actors
                </a>
            </div>

            <div class="nav-item px-3">
                <a class="nav-link" href="Statistics">
                    <i class="bi bi-bar-chart-line"></i> Statistics
                </a>
            </div>

             <AuthorizeView>
                 <Authorized>
                      <div class="nav-item px-3">
                        <a class="nav-link" role="link" @onclick="PerformLogout">
                            <i class="bi bi-box-arrow-in-right"></i>Log out
                        </a>
                     </div>
                 </Authorized>
                
                <NotAuthorized>
                <div class="nav-item px-3">
                    <a  role="link" class="nav-link" @onclick="ShowModal">
                        <i class="bi bi-box-arrow-in-right"></i> Log in 
                    </a>
                </div>
                </NotAuthorized>
           </AuthorizeView>
        </nav>
    </div>

@code {
    private bool collapseNavMenu = true;
    private bool showNavToggler = false;
    
    private string? NavMenuCssClass => collapseNavMenu ? "collapse" : null;

    private void ToggleNavMenu()
    {
        collapseNavMenu = !collapseNavMenu;
    }

    public async Task PerformLogout()
    {
        try
        {
            ((CustomAuthenticationStateProvider)AuthenticationStateProvider).Logout();
            NavigationManager.NavigateTo("/");
        }
        catch (Exception e) { }
    }

    void ShowModal()
    {
        var options = new ModalOptions() 
        { 
            Animation = ModalAnimation.FadeInOut(0.3),
            HideHeader = true
        };
        Modal.Show<Login>("Log in", options);
    }
}
